Current list of items to do for FINUFFT library

HIGHER PRIORITY:

* remove the 1/M type-1 prefactor, also in test routines. Add extra fortran interface which preserves it.
* decide if should compile single-prec library with new names ("f" suffix), rather than current overall compile option which keeps names the same?
* related to above, fix matlab, octave, and python interfaces for single-prec.
* speed and parallel scaling for uniform and surface-like NU pts dists, figures
* add the other C interfaces to finufft_c, after understand if use of _Complex is good.
* Decide if non vs omp get different lib names.
* run nufft_comparison, use for paper. Compare vs NFFT (Chemnitz), gpuNUFFT (Knoll)
* theory work on exp(sqrt) being close to PSWF
* figure out why bottom out ~ 1e-10 err for big arrays in 1d. unavoidable roundoff? small arrays get to 1e-14.
* Checkerboard per-thread grid cuboids, compare speed in 2d and 3d against current 1d slicing. See cnufftspread:set_thread_index_box()
* Work on Mac OSX: 1) fix: `make lib` fails to make the shared object library (.so), 2) ship .mexmaci64, 3) better install notes.
* Flatiron logo
* github.io webpage
* Licensing: proper FI license; deal with Nick Hale's Gauss-Legendre nodes code is GPL - replace w/ any small-n G-L code.
* release, outreach, users, NA-Digest


LOWER PRIORITY:

* figure why matlab/MEX gives zero answers for >=2e31 array sizes (big1dtest.m), and then change .mw to use inout with allocation by matlab, to bypass the mwrap reliance on int 32 type.
* test huge arrays >=2^31 2d, 3d in C++.
* test huge arrays >=2^31 in octave/mex.
* allow fortran interface to access >=2^31 arrays.
* make test - should check sort=0,1 both?
* more doc/manual; wait until after tech report/paper
* make common.cpp shuffle routines dcomplex interface and native dcomplex arith (remove a bunch of 2* in indexing, and have no fftw_complex refs in them. However, need first to make sure using complex divide isn't slower than real divide used now). Fix the calling from finufft?d?
* clean up tree, remove devel/ and unused contrib?
* package RPM and .deb for linux
* figure out how to set up path to link to shared library - rpath?
* windows test
* rewrite fftw3 plans via 64bit guru interface to allow eg 1024^3 type 1 or 2 in 3D. Not sure needed (only for huge 1d transforms). see http://www.fftw.org/fftw3_doc/Guru-Interface.html#Guru-Interface
