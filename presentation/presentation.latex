%%%
%%%  Document & publication information
%%%


%%%
%%%  Manuscript
%%%

\title{A Guru Interface for the FINUFFT library}

\begin{document}


\begin{abstract}
     We have built a new software interface to the Flatiron library for performing the "non-uniform FFT" - a generalization of the FFT to off-grid data. We optimize the case of repeated executions via explicit plan instantiation, and present timing results.
\end{abstract}

\section{FINUFFT overview}
\begin{center}
\underline{Fourier Transform}: \\
between domain of the function from  \\ 
time/space →  frequency \\
or \\
between bases of the function from \\
x,y,z →  sines and cosines. 
\vspace{1cm}

In this context, there are three types of Fourier Transforms: (1D case) 

\end{center} 
\begin{itemize}
    \item \textbf{Type 1}: transforms a set of weights at  $M$ \textit{non uniform} points on a $[-\pi, \pi )^{d}$ grid into approximate weights of the $N = N_1 \cdot\cdot N_d$ of the set $I$ \textit{uniform} Fourier modes  lying between $[-N/2, N/2]$ for each dimension 
    \begin{equation}
        f_{k} := \sum_{j=1}^M c_je^{ikxj} ,  \hspace{2cm} k \epsilon I 
    \end{equation}
    \item \textbf{Type 2}: evaluates Fourier series for given \textit{uniform} coefficients $f_k$ at \texit{non uniform} target points $x_j$
    \begin{equation}
        c_{j} := \sum_{k \epsilon I} f_ke^{-ik\cdot x_j}, \hspace{2cm} j \epsilon [1,M]
    \end{equation}
    \item \textbf{Type 3}: evaluating the Fourier Transform of the non periodic distribution at \texit{non uniform} $x_j$
    \begin{equation}
        f(x) := \sum_{j=1}^M c_j\delta(x-x_j)
    \end{equation}
    at \textbf{non uniform} target frequencies $s_k$
    \begin{equation}
        f_k := \sum_{j=1}^M c_je^{is_k\cdot x_j}, \hspace{2cm} k \epsilon [1,N]
    \end{equation}
\end{itemize}
\vspace{1cm}
\section{Algorithm Overview}
\begin{enumerate}
    \item Type 1 Algorithm: 
    \begin{itemize}
    \item 1) Spread/Smooth non-uniform points to uniform points by convolving with a kernel
    \item 2) Perform the FFT (call FFTW)
    \item 3) Deconvolve by the transform of the spreading kernel
    \end{itemize}
    \item Type 2 Algorithm
    \begin{itemize}
        \item 1)Deconvolve (pre-correct) by the transform of the spreading kernel 
        \item  2)Perform the FFT (call FFTW) (type 2) 
        \item 3)Interpolate into target values from weighted mixture of grid values nearby 
    \end{itemize}
\end{enumerate}


\section{Interface/Implementation Design Decisions}
\begin{enumerate}
    \item \textit{Interface}: Reduce repeated overhead of "fftw plan" instantiation via the "finufft plan" struct
    \begin{itemize}
    \item Old Interface -> New Interface [code snippet]
    \end{itemize}
    \item \textit{Interface/Implementation:} A more general, perhaps more cumbersome method of calling in exchange for less code  
    \begin{itemize}
        \item Pro: Code Reduction = bug reduction [Don't Duplicate!]
        \item Con: Simplest Cases (1 transform, 1D) more complex, branch \\ mispredicts cause slow down [code snippet]
    \end{itemize}
    \item \textit{Implementation:} : Multi-Threading Pattern
    \begin{itemize}
        \item Spreading (to uniform T1)/Interpolation(to non uniform T2) of coordinate weights = the Meaty Part of the FINUFFT manual labor
        \item Multithreading routines for each existed before this summer
        \item 3 possible schemes  [Let's go to the Board]
    \end{itemize}
 \end{enumerate}
   
    \begin{flushleft}
     \begin{tabular}{|| c c c||} 
     \hline
      Sequential Multithreading & Simultaneous Single Threaded & Nested Multithreading \\ [0.5ex] 
     \hline\hline
     \multicolumn{3}{|c|}{Type 1 3D Single Trial} \\
     \hline
      0.992 & 0.3 & 0.731 \\
      \hline
      \multicolumn{3}{|c|}{Type 1 3D 20 Trials} \\
     \hline
       1.13 &     & 0.849  \\  
       \hline
      \multicolumn{3}{|c|}{Type 1 3D 41 Trials} \\
         \hline
       1.14 &     & 1.4  \\  [1ex] 
     \hline 
      \end{tabular}
    \end{flushleft}

\section{Speedup Results}
\begin{enumerate}
        \item Main Goal: Reduction of FFTW Plan Construction Time: Achieved!
        \item FFTW Execution Time: speedup likely due to leveraging of the "fftw plan many" interface, reducing the amount of calls the "fftw exec" by a factor of the batch size
        \item Sort/Interp Time:  Single Trial hovers above/below 1. Though the scheme remained the same, speedups likely due to elimination of repeated omp setup
        \item Total Finufft Time: Single Trial hovers above/below 1. Across dimension, speedup increases as "n transforms" increases, plateau ~ threadBlockSize. Type 3 shows most significant improvement
\end{enumerate}

\end{document}
