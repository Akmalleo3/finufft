# Makefile for Flatiron Institute (FI) NUFFT libraries.
# Barnett 1/16/17

# Copy this file (makefile.dist) to makefile before you edit.
# There are no makefiles in subdirectories.

# ============= system-specific settings ===============================
CC=g++
FC=gfortran

# choose EITHER single threaded...
CFLAGS=-fPIC -O3 -funroll-loops -march=native -std=c++11 -lfftw3
CLIBSFFT = -lfftw3 -lm
FFLAGS=-fPIC -O3 -lstdc++
#MFLAGS=
# ...OR multi-threaded:
CFLAGS=-fPIC -O3 -funroll-loops -march=native -std=c++11 -fopenmp
CLIBSFFT = -lfftw3_omp -lfftw3 -lm
#FFLAGS=-fPIC -O3 -funroll-loops -lstdc++ -fopenmp
MFLAGS=-lgomp

# override shipped FFTPACK with linking against FFTW
# ** to do

# set location of old CMCL NUFFT, if want to link against for comparison:
CMCLNUFFTALL=~/numerics/nufftall-1.3.3

# MATLAB stuff..
MEX=mex
MEXFLAGS = -largeArrayDims -lgfortran -lm $(MFLAGS)
# Mac users should use something like this:
#MEX = /Applications/MATLAB_R2014a.app/bin/mex
#MEXFLAGS = -largeArrayDims -L/usr/local/gfortran/lib -lgfortran -lm
# ======================================================================


# objects to compile: spreader...
SOBJS = contrib/besseli.o src/cnufftspread.o src/utils.o src/twopispread.o src/common.o
# for NUFFT library...
OBJS = $(SOBJS) src/finufft1d.o src/dirft1d.o
# for Fortran interface...
FOBJS = $(SOBJS) fortran/cnufftspread_f.o
# for temp hook-up to Leslie's nuffts...
LOBJS = $(FOBJS) fortran/finufft1dtemp.o contrib/next235.o contrib/dfftpack.o fortran/prini.o fortran/dirft1d.o

default: clean test1d
#default: clean spreadtestnd

.PHONY:	spreadtestnd fortran test1d

# implicit rules for libs (note -o ensures writes to correct dir)
.cpp.o:
	$(CC) -c $(CFLAGS) $< -o $@
.f.o:
	$(FC) -c $(FFLAGS) $< -o $@

spreadtestnd: examples/spreadtestnd.cpp $(SOBJS)
	$(CC) $(CFLAGS) examples/spreadtestnd.cpp $(SOBJS) -o examples/spreadtestnd
# here the tee cmd copies output to screen. 2>&1 grabs stdout and stderr...
	(cd examples; ./spreadtestnd.sh 2>&1 | tee spreadtestnd_results.txt)

test1d: examples/finufft1d_test.cpp $(OBJS)
	$(CC) $(CFLAGS) examples/finufft1d_test.cpp $(OBJS) $(CLIBSFFT) -o examples/finufft1d_test
	(cd examples; ./finufft1d_test 10000000 1000000 1e-6)

# the main libs...
nufft: $(SOBJS)
	$(CC) $(CFLAGS) src/finufft1d.cpp


fortran: $(FOBJS)
# other fort wrappers todo

# this is temporary:  todo fix segfault
leslie: $(LOBJS)
	$(CC) $(FFLAGS) fortran/nufft1d_demof90.f $(LOBJS) -o fortran/nufft1d_demo -lgfortran
	fortran/nufft1d_demo

# kill this:
unfinishedspreaddemof: fortran/spread_demo.o $(FOBJS) $(SOBJS)
	$(CC) $(CFLAGS) fortran/spread_demo.o $(FOBJS) $(SOBJS) -o fortran/spread_demo -lgfortran
	fortran/spread_demo

#mex: src/cnufftspread.h src/_mcwrap/mcwrap_cnufftspread_dir1.cpp $(SPREADOBJS)
# make new interface in matlab: from src/, do mcwrap('cnufftspread.h')
# which fails for omp.
# mv src/cnufftspread_type1.mexa64 matlab/
#	(cd src; $(MEX) _mcwrap/mcwrap_cnufftspread_type1.cpp cnufftspread.o ../contrib/besseli.o -output cnufftspread_type1 $(MEXFLAGS))
# todo: fix up!

#finufft1d_demo: finufft1d_demo.o $(OBJS)
#	$(FC) $(FFLAGS) finufft1d_demo.f90 $(OBJS) -o finufft1d_demo

clean:
	rm -f $(OBJS) $(FOBJS) $(SOBJS) $(LOBJS)
